#!/usr/bin/env python3
import sys
import traceback

from lib_testbed.generic.util.base_tool import ServerToolBase
from lib_testbed.generic.client.client import Clients


class RadarTool(ServerToolBase):
    def get_command_list(self, parsed_args):
        config = self.get_config()
        kwargs = {'config': config, 'multi_obj': True, 'type': 'linux', 'hackrf': True}
        try:
            clients_obj = Clients(**kwargs)
            clients_api = clients_obj.resolve_obj(**kwargs)
            client_lib = clients_api.lib
            tool = clients_api.lib.tool
        except Exception:
            if self.debug:
                traceback.print_exc(limit=2, file=sys.stdout)
            raise

        commands = {
            'hwstatus': tool.check_hackrf_status,
            'pulse': tool.hackrf_generate_radar_pulse
        }
        return commands, client_lib


def main(args):
    client_tool = RadarTool(args)
    client_tool.execute()
    exit(0)


if __name__ == "__main__":
    main(sys.argv)
