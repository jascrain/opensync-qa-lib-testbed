FROM ubuntu:22.04
ENV PYTHON_VERSION 3.10.9
ENV PATH /usr/local/bin:$PATH
ENV LC_ALL C.UTF-8
ENV LANG C.UTF-8
ENV DEBIAN_FRONTEND noninteractive
# Install required packages
RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
    --mount=type=cache,target=/var/lib/apt,sharing=locked \
    apt update && apt install -y  \
    build-essential \
    apt-utils \
    git-core \
    iputils-ping \
    traceroute \
    telnet \
    wget \
    curl \
    vim \
    bsdmainutils \
    zip \
    expect \
    sshpass \
    pkg-config \
    libfreetype6-dev \
    libpq-dev \
    libxml2-dev \
    libxslt-dev \
    nano \
    xterm \
    texlive-latex-extra \
    texlive-pictures \
    texlive-luatex \
    biber \
    bash-completion \
    libsnappy-dev \
    python3-tk \
    protobuf-compiler \
    libjpeg8-dev \
    libffi-dev \
    libssl-dev \
    cargo \
    udev \
    make \
    cmake \
    zlib1g-dev \
    libbz2-dev \
    libreadline-dev \
    libsqlite3-dev \
    liblzma-dev \
    net-tools \
    iproute2 \
    jq \
    tshark


# Install pyenv, Python interpreter, and make it global
SHELL ["/bin/bash", "-c"]
ENV PYENV_ROOT=/opt/.pyenv
ENV PYENV_BUILD_ROOT=/root/.cache/pyenv/sources
RUN git clone https://github.com/pyenv/pyenv.git ${PYENV_ROOT}
ENV PATH="${PYENV_ROOT}/bin:${PATH}"
RUN echo 'export PATH="${PYENV_ROOT}/bin:$PATH"' >> ~/.bashrc && echo 'eval "$(pyenv init -)"' >> ~/.bashrc
RUN --mount=type=cache,target=/root/.cache/pyenv/sources \
    pyenv install ${PYTHON_VERSION} && pyenv global ${PYTHON_VERSION} && chmod a+w -R ${PYENV_ROOT}
ENV PATH="${PYENV_ROOT}/versions/${PYTHON_VERSION}/bin:${PATH}"
# Update pip
RUN --mount=type=cache,target=/root/.cache/pip \
    python -m pip install --upgrade pip

# -- Install allure
RUN wget https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.10.0/allure-commandline-2.10.0.zip
RUN unzip allure-*.zip && rm allure-*.zip && mv allure-* allure && mv allure /opt/
ENV ALLURE_GEN_FILE=/opt/allure/bin/allure-gen
COPY allure-gen ${ALLURE_GEN_FILE}
RUN chmod a+x ${ALLURE_GEN_FILE}
ENV ALLURE_SHOW_FILE=/opt/allure/bin/allure-show
COPY allure-show ${ALLURE_SHOW_FILE}
RUN chmod a+x ${ALLURE_SHOW_FILE}
ENV PATH="/opt/allure/bin:${PATH}"

# -- Install flake8-check script
ENV FLAKE8_CHECK_FILE=/usr/bin/flake8-check
COPY flake8-check ${FLAKE8_CHECK_FILE}
RUN chmod a+x ${FLAKE8_CHECK_FILE}

# -- Install black-check script
ENV BLACK_CHECK_FILE=/usr/bin/black-check
COPY black-check ${BLACK_CHECK_FILE}
RUN chmod a+x ${BLACK_CHECK_FILE}

RUN mkdir -p /plume

# -- Matplotlib stuff
ENV MPLBACKEND=Agg
RUN export MPLBACKEND

# -- Install pipenv
ENV SETUPTOOLS_USE_DISTUTILS=stdlib
RUN --mount=type=cache,target=/root/.cache/pip \
    python -m pip install setuptools==67.7.2 setuptools-scm pipenv==2023.7.23

# -- Adding autocomplete to pset command
COPY pset /etc/bash_completion.d/
